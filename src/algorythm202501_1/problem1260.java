package algorythm202501_1;

public class problem1260 {

//    풀지 못함
//    방문할 수 있는 정점이 여러 개인 경우에는 정점 번호가 작은 것을 먼저 방문
//    방문할 정점이 없는 경우 종료
//
//            | 1   | 2   | 4   |
//            | --- | --- | --- |
//            |     | 3   | 4   |
//            |     |     | 4   |
//    DFS : 1 > 2 > 4 > 3
//    BFS : 1 > 2 > 3 > 4
//
//            | 3   | 1   | 2   | 5   |     |
//            | --- | --- | --- | --- | --- |
//            |     | 4   | 5   |     |     |
//            |     |     |     |     |     |
//    DFS : 3 > 1 > 2 > 5 > 4
//    BFS : 3 > 1 > 4 > 2 > 5
//
//            | 1000 | 999 |
//            | ---- | --- |
//    DFS : 1000 999
//    BFS : 1000 999
//
//
//    DFS 깊이 우선 탐색
//1. V에서 시작
//2. 방문한 정점 이외 연결된 정점 비교
//3. 작은 수로 이동
//4. 2번 3번 반복
//5.  더 이상 방문 가능한 정점이 없을 경우 출력
//
//    BFS 너비 우선 탑색
//1. V에서 시작
//2. V부터 방문 가능한 정점 나열
//3. 나열된 수가 없는 경우 출력
//
}
